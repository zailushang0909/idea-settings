<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--<context:annotation-config></context:annotation-config>-->
    <context:component-scan base-package="com.itheima.jobs"></context:component-scan>

    <!-- 指定应用名称 -->
    <dubbo:application name="health_jobs" />
    <!--指定服务注册中心地址-->
    <dubbo:registry address="zookeeper://49.234.74.30:2181"/>
    <!--批量扫描-->
    <dubbo:annotation package="com.itheima" />
    <!--
        超时全局设置 10分钟
        check=false 不检查服务提供方，开发阶段建议设置为false
        check=true 启动时检查服务提供方，如果服务提供方没有启动则报错
    -->
    <dubbo:consumer timeout="60000" check="false"/>

    <!--配置任务-->
    <!--<bean id="clearImgJob" class="com.itheima.jobs.ClearImgJob"></bean>-->
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 注入目标对象 -->
        <property name="targetObject" ref="clearImgJob"/>
        <!-- 注入目标方法 -->
        <property name="targetMethod" value="clearImg"/>
    </bean>

    <!-- 注册一个触发器，指定任务触发的时间 -->
    <bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 注入JobDetail -->
        <property name="jobDetail" ref="jobDetail"/>
        <!-- 指定触发的时间，基于Cron表达式 -->
        <property name="cronExpression" value="0/60 * * * * ?">
            <!--<value>0 0 2 * * ?</value>-->
            <!--<property name="cronExpression" value="0/5 * * * * ?"/>-->

        </property>
    </bean>

    <!--配置任务2-->
    <bean id="jobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 注入目标对象 -->
        <property name="targetObject" ref="clearOrderSettingJob"/>
        <!-- 注入目标方法 -->
        <property name="targetMethod" value="clearOrderSetting"/>
    </bean>

    <!-- 注册一个触发器，指定任务触发的时间 -->
    <bean id="myTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 注入JobDetail -->
        <property name="jobDetail" ref="jobDetail2"/>
        <!-- 指定触发的时间，基于Cron表达式 -->
        <!-- 每月最后一天凌晨2点 -->
        <property name="cronExpression" value="0 0 2 L * ?"/>
    </bean>

    <!-- 注册一个统一的调度工厂，通过这个调度工厂调度任务 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 注入多个触发器 -->
        <property name="triggers">
            <list>
                <ref bean="myTrigger"/>
                <ref bean="myTrigger2"/>
            </list>
        </property>
    </bean>
</beans>
