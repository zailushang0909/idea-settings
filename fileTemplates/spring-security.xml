<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

<!--配置不受springsecurity 控制的url-->
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/template/**"/>
    <security:http pattern="/pages/login.html" security="none"/>
    <security:http use-expressions="true" auto-config="true">
<!--设置页面可以通过frame加载-->
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <!--配置需要权限访问url-->
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        <!--配置登陆页面-->
        <security:form-login login-page="/pages/login.html"
                             login-processing-url="/login.do"
                             password-parameter="password"
                             username-parameter="username"
                             default-target-url="/pages/main.html"
                             always-use-default-target="true"
       />
        <!--    配置登出请求路径-->
        <security:logout logout-success-url="/pages/login.html" invalidate-session="true" logout-url="/logout.do"/>
        <!--配置关闭csrf-->
        <security:csrf disabled="true"/>
    </security:http>

<!--配置认证管理器-->
    <security:authentication-manager>
        <!-- 配置认证提供者 指定userdetailsservice 提供用于认证的用户信息-->
        <security:authentication-provider user-service-ref="myUserDetailsService">
            <!-- 指定加密对象-->
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!--开启springsecurity 全局方法权限注解驱动 通过注解配置方法的访问权限-->
    <security:global-method-security pre-post-annotations="enabled"/>
<!--    装配加密对象-->
    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="bCryptPasswordEncoder"/>
</beans>
